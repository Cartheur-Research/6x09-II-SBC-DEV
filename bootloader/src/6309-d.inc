; Define register addresses for CPU 1

; Registers
A1           = $00       ; Accumulator A for CPU 1
B1           = $01       ; Accumulator B for CPU 1
CC1           = $02       ; Condition code register for CPU 1
D1           = $03       ; Data register for CPU 1
X1           = $04       ; X-index register for CPU 1
Y1           = $05       ; Y-index register for CPU 1
SP1           = $07       ; Stack pointer for CPU 1
PC1           = $08       ; Program counter for CPU 1

; Interrupt vectors for CPU 1
IRQ1          = $200       ; Interrupt Request vector for CPU 1
NMI1          = $208       ; Non-Maskable Interrupt vector for CPU 1
RESET1        = $210       ; Reset vector for CPU 1

; Memory locations for CPU 1
STACK_TOP1    = $ffff       ; Top of stack for CPU 1
START1        = $0000       ; Start of program for CPU 1

; Define register addresses for CPU 2

; Registers
A2           = $f8       ; Accumulator A for CPU 2
B2           = $f9       ; Accumulator B for CPU 2
CC2           = $fa       ; Condition code register for CPU 2
D2           = $fb       ; Data register for CPU 2
X2           = $fc       ; X-index register for CPU 2
Y2           = $fd       ; Y-index register for CPU 2
SP2           = $ff       ; Stack pointer for CPU 2
PC2           = $10       ; Program counter for CPU 2

; Interrupt vectors for CPU 2
IRQ2          = $204       ; Interrupt Request vector for CPU 2
NMI2          = $212       ; Non-Maskable Interrupt vector for CPU 2
RESET2        = $218       ; Reset vector for CPU 2

; Memory locations for CPU 2
STACK_TOP2    = $ffff       ; Top of stack for CPU 2
START2        = $0004       ; Start of program for CPU 2